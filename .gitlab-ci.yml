# This file is a template, and might need editing before it works on your project.
# Read more about this script on this blog post https://about.gitlab.com/2018/10/24/setting-up-gitlab-ci-for-android-projects/, by Jason Lenny

.android_jobs: &android_jobs
  image: openjdk:8-jdk

  variables:
    ANDROID_COMPILE_SDK: "30"
    ANDROID_BUILD_TOOLS: "30.0.3"
    ANDROID_SDK_TOOLS:   "6858069"

  before_script:
    - cd android
    # Setup path as android_home for moving/exporting the downloaded sdk into it
    - export ANDROID_HOME="${PWD}/android-home"
    # Create a new directory at specified location
    - install -d $ANDROID_HOME
    # Here we are installing androidSDK tools from official source,
    # (the key thing here is the url from where you are downloading these sdk tool for command line, so please do note this url pattern there and here as well)
    # after that unzipping those tools and
    # then running a series of SDK manager commands to install necessary android SDK packages that'll allow the app to build
    - wget --output-document=$ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
    # move to the archive at ANDROID_HOME
    - pushd $ANDROID_HOME
    - unzip -d cmdline-tools cmdline-tools.zip
    - popd
    - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/tools/bin/

    # Nothing fancy here, just checking sdkManager version
    - sdkmanager --version

    # use yes to accept all licenses
    - yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses || true
    - sdkmanager --sdk_root=${ANDROID_HOME} "platforms;android-${ANDROID_COMPILE_SDK}"
    - sdkmanager --sdk_root=${ANDROID_HOME} "platform-tools"
    - sdkmanager --sdk_root=${ANDROID_HOME} "build-tools;${ANDROID_BUILD_TOOLS}"

    # Not necessary, but just for surity
    - chmod +x ./gradlew

stages:
  - parkzonen_fetch
  - website_build
  - android_build
  - test

fetch_data:
  image: node
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  stage: parkzonen_fetch
  before_script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install curl jq -y
    - yarn install --pure-lockfile --ignore-engines
  script:
    - ./fetch.sh
    - yarn run convert
  artifacts:
    paths:
      - processed/
    expire_in: 1 day
webpack:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  stage: website_build
  image: node
  before_script:
  - yarn install --pure-lockfile --ignore-engines
  script: yarn run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

lintDebug:
  <<: *android_jobs
  stage: android_build
  script:
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint
  artifacts:
    paths:
    - android/app/lint/reports

assembleDebug:
  <<: *android_jobs
  stage: android_build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
    - android/app/build/outputs/

debugTests:
  <<: *android_jobs
  stage: test
  script:
    - ./gradlew -Pci --console=plain :app:testDebug
