# This file is a template, and might need editing before it works on your project.
# Read more about this script on this blog post https://about.gitlab.com/2018/10/24/setting-up-gitlab-ci-for-android-projects/, by Jason Lenny

.android_jobs: &android_jobs
  image: openjdk:8-jdk

  variables:
    ANDROID_COMPILE_SDK: "28"
    ANDROID_BUILD_TOOLS: "28.0.3"
    ANDROID_SDK_TOOLS:   "4333796"

  before_script:
    - cd android
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -qd android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    - chmod +x ./gradlew
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail
      #    - rm app/src/main/assets/dist
      #    - mkdir app/src/main/assets/dist
      #    - touch app/src/main/assets/dist/index.html

stages:
  - parkzonen_fetch
  - website_build
  - android_build
  - test

fetch_data:
  image: node
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  stage: parkzonen_fetch
  before_script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install curl jq -y
    - yarn install --pure-lockfile --ignore-engines
  script:
    - ./fetch.sh
    - cd convert
    - ts-node --project ./tsconfig.json index.ts
  artifacts:
    paths:
      - processed/
    expire_in: 1 day
webpack:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  stage: website_build
  image: node
  before_script:
  - yarn install --pure-lockfile --ignore-engines
  script: yarn run build --no-progress
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

lintDebug:
  <<: *android_jobs
  stage: android_build
  script:
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint
  artifacts:
    paths:
    - android/app/lint/reports

assembleDebug:
  <<: *android_jobs
  stage: android_build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
    - android/app/build/outputs/

debugTests:
  <<: *android_jobs
  stage: test
  script:
    - ./gradlew -Pci --console=plain :app:testDebug
